<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKlXAACpVwAAqVcAAKlXAACpVwAEqVcAAbR5
        JgC3cSgEuncxAMKISgLDiUwDypJdAKNMAACoVAAAqVcAAqpYAQOyaRwAtW4kA7l2MAHYsokAw4lMBMOJ
        TAHDiUwAw4lMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACpVwAAqVcAAKlXAACpVwACqVcAA6lX
        AAC2cCYGplEAdrhzK9bHkVhibQAAAcaPVADFjFADu3kzA6dTAAOqWQMBmTkAAKROAD6wZBPJw4pNnMOK
        TRXFjVIAw4lMAsOJTAPDiUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqVcAAKlX
        AAGpVwAAqVcATalYAdqnUwD/uHQr/MWNUf/CiErLw4lMPMOJTAC1biQCqFUAAKlXACCpWAGrqFUA/65h
        EP3Eik7/w4lM78OJTHLDiUwGw4lMAMOJTAEAAAAA2617ANutewDbrXsA2617A9utewTbrXsE2617BM+Y
        XQYAAAAAqlkDKqlXALmpVwD/qVgB/qdTAPy4cyv7xY1R/MOIS//DiUz/w4lNpb19OSWoVQB9qVcA96lY
        Af+oVQD8rmEQ+8SKTvvDiUz9w4lM/8OJTNjDiUxHw4lMAAAAAADbrXsA2617ANutewDbrXsA2617ANut
        ewCoVgAAqlcAAqlXAACpVwC7qVcA/6lXAPmpWAH9p1MA/7h0LP7FjVH/w4hL/MOIS/zFjFH/uXYv+adU
        AP+pWAH+qVcB+6hVAP+vYhD+xIpO/8OJTP7DiUz6w4lM/8OJTOfDiUwR2617ANutewDbrXsB2617ANut
        e2LbrXuG2617ftute4DarHmB37SFe7BkEt2oVQD/qVgB+6pZA/+oVQD/uHQs/sWOU//DiUv/w4hL/MWM
        Ufu5di/+p1QA/KlYAfyqWAL+qVYA/69iEf7Ei0//w4pN/8OJTPzDiUz/w4lM58OJTBLbrXsA2617Adut
        ewDbrXsT261769ute//brXv+2617/9usev/dsID/tm0f/6ZSAP+qWgT/qVcC/6ROAP+4dCz/w4lM/8OI
        S//DiUz/xYxR/7l2L/+nVAD/qlkD/6pZA/+lTwD/rmAS/8OISf/Ch0n/xIpO/sOJTP/DiUzpw4lMEtut
        ewDbrXsD2617ANute07brXv/2617+Nute/vbrXv726x6+92wgPu2biD+p1QA/6ZRAf+pVwT/xY5S/9/A
        n//QpHT/wodI/8GFRv/FjVP/uncw/6hWAP+oVAL/pU8A/7h0K//atpD/2bSN/8WOU//AhET+w4lM/8OK
        TenCiEoS2617ANutewPbrXsA2617ltute//brXv72617/9ute//brHr/3bGA/7NoIP+jTAD/vHw2/9y7
        l//p1b//59C3/+fRuP/evpz/yphi/8KHSP+4cy3/o0sA/7FmF//RpXX/59K5/+jSuv/n0bj/48ms/9Kn
        ef7DiEr/wYRF58aPVhLbrXsB2617ANutewXbrXvY2617/9ute/3brXv/2617/9ute//crnz/wIE9/9Kp
        fP/p1L3/59G4/+TLr//lzLD/5cyx/+bPtf/mzrT/3r6c/8CDQ//HkVj/5cyx/+jUvP/kzLD/5Myw/+TM
        sP/lzrP/59K5/t/Cof/On23nuHIqEdutewPbrXsA2617Ntute//brXv/2617/9ute//brXv/2618/9qs
        ef/etYf/5sut/+XOs//lzbL/5c2x/+XMsf/ky6//59K5/+jSuv/QpXX/vHs3/9m0jP/lzbL/5s+2/+XM
        sf/lzLH/5c2x/+XNs/3lzrP/5s+14OrXwUb6+PMA2617BNutewDbrXt72617/9ute/vbrXv/2617/9ut
        e//brXv/2618/9qreP/aqnb/3reM/+TIqv/lz7X/5tC2/+nVvv/ZtY7/uHUs/6NLAP+xZh3/woZH/8eQ
        V//at5D/5tC2/+bQtv/lz7X/5cyw+t+6kf/brn2A2659ANyxggXbrXsB2617ANute8PbrXv/2617/Nut
        e//brXv/2617/9ute//brXv/2617/9utfP/aq3j/2616/+C9l//fwaD/wYZG/6hUAf+mUgH/qFUA/7Rr
        H//FjVP/woZI/8GFRv/Mmmb/38Cf/+LCnv3cr3/z2qt3/9ute4HZpm8A2qp2BNutewDbrXsg261799ut
        e//brXv+2617/9ute//brXv/2617/9ute//brXv/2617/9utfP/aq3n/3rGA/798N/+iSwD/qlkD/6pZ
        A/+nUwD/s2se/8WMUf/DiUz/xIpO/8CERf7IkFX/26166tqseb3brXz/2617ftutewDbrXsF2617ANut
        e17brXv/2617/Nute//brXv/2617/9ute//brXv/2617/9ute//brXv/2617/9qsef/fs4T/v3w2/6ZT
        AP+qWQT/qlkD/6hVAP+zah7/xY1S/8OJTP/Eik3/wohL/cmSWP/crn272617ktute//brXt92617ANut
        ewXbrXsA2617ptute//brXv82617/9ute//brXv/2617/9ute//brXv/2617/9ute//brXv/2qx5/9+z
        hP+/fDX/pVEA/6paBP+qWQP/pE0A/7NqH//DiUz/wohK/8SKTv/Ch0n7yZNZ/9yvfnbbrXuE2617/9ut
        e3zbrXsA2617Bdutew/brXvg2617/9ute/rbrXv+2617/9ute/7brXv82617/Nute/zbrXv82617/Nut
        e/zarHn837OE/L98Nv2mUwD/p1MC/6dSAP++gT7/3b2a/9Wsgf/DiU3/wYVG/8KIS/3Jklj/3rGAL9ut
        e4jbrXv/2617fNutewDbrXsF2617UNute//brXv+2617/9ute//brXv/2617/9ute//brXv/2617/9ut
        e//brXv/2617/9qsef/ftIT/vXo2/qBHAPy2cSb/17CH/+nUvf/n0bj/59G5/+HEpf/PoG79wYVG/8SK
        TeW4cisA2616ktute//brXt82617ANutewXbrXso2617Utute0/brXtE2617xtute//brXu22617Q9ut
        e1LbrXtP2617T9ute0/brXtP2ap3UuW+kkK7dy+xzJxp/+fRuPzo07v/5Muv/+TMsP7kzLD/5s+1/+fR
        uPzcu5b/zJpmzN20iADbrXyW2617/9ute3zbrXsA2617BQAAAADbrXsA2617A9utewDbrXut2617/9ut
        e5XbrXsA2617BNqtewAAAAAAAAAAAKNQAADv4tMB9/PsAO3fzxPs28eX5c60+uXNsv/lzbH/5c2y/uXN
        sf/lzbP+5c60/+jTvLnq18Iu4LqPANutfJbbrXv/2617fNutewDbrXsF2617AtutewTbrXsG2617ANut
        e7DbrXv/26175Nute8XbrXvJ2617ydute8nbrXvJ2617ydute8jbrXvK26x5wNmocrfdtIfx48Wl/+bP
        tv3lz7X85tC3/OTJrP3euI742qp2v9qrd7rbrXzD26175Nute//brXt/2617ANutewUAAAAA2617ANut
        ewPbrXsA2617stute//brXv82617/9ute//brXv/2617/9ute//brXv/2617/9ute//brXv/2618/9ur
        eP/brHn/3riO/uPHp//gvZb/2618/9qreP/brXv/2617/9ute//brXv72617/9ute4DbrXsA2617BQAA
        AADbrXsA2617AdutewDbrXs22617Utute0zbrXtL2617S9ute0vbrXtL2617S9ute0vbrXtL2617Tdut
        e0PbrXvJ2618/9ute//aqXWM26x5RNmoclXbrHlR3K9+Udute0/brXtR2617Rdute8XbrXv/2617ftut
        ewDbrXsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuu
        fADbrXsD2617ANute1DbrXv/2617/9uufLfbq3gA2qt3AdyvfgAAAAAA2658ANutewPbrXsA2617rNut
        e//brXt92617ANutewUAAAAA2617ANutewDbrXsA2617AtutewTbrXsD2617A9utewPbrXsD2617A9ut
        ewPbrXsD2617A9utewTbrXsE26x5ANute8TbrXv/2617+Nute6bbrXuV2617mdute5jbrXuY2617mdut
        e5PbrXvZ2617/9ute33brXsA2617BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADbrXwA2617ANutewPbrXsA2617UNute//brXv92617/9ute//brXv/2617/9ut
        e//brXv/2617/9ute/vbrXv/2617gNutewDbrXsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbrXsA2617ANutewDbrXsG2617cdute4PbrXt72617e9ut
        e3zbrXt82617fNute3zbrXt72617fNute4nbrXtA2617ANutewIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANutewDbrXsA2617ANutewHbrXsA2617ANut
        ewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANutewDbrXsA2617ANut
        ewTbrXsE2617BNutewTbrXsE2617BNutewTbrXsE2617BNutewTbrXsF2617AtutewDbrXsAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/6KUgv9IIQn/kBQCkEAAAaRAAACQAAAAoAAAACAAAAAgAAAAQAAAAEAA
        AAFAAAACQAAAAoAAAAKAAAACgAAAAgAAAAIAAAAiAAAAIpE6ACIQAAACkAAAApAAAAL//Qki0ACAAv/8
        gAL//IAC//6X///+gAL///////////////8=
</value>
  </data>
</root>