<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAEAAAABIAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABIAAAAQAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADdAAAA8gAA
        AOsAAADqAAAA6gAAAOwAAADuAAAA7QAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA7QAA
        AO4AAADsAAAA6gAAAOoAAADrAAAA8gAAAN0AAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAA
        AO4AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAARAAAA6wAAAP8AAADgAAAApAAAAKQAAADhAAAA/wAAAPcAAACuAAAApwAAAKkAAACoAAAAqAAA
        AKkAAACnAAAArgAAAPcAAAD/AAAA4QAAAKQAAACkAAAA4AAAAP8AAADrAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAABAAAAAAAAABEAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAA
        AAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAADqAAAAFAAA
        AAAAAAAEAAAAAwAAAAMAAAAEAAAAAAAAABQAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAA
        ABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA7AAAAP8AAADhAAAApAAAAKQAAADhAAAA/wAA
        AOwAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOwAAAD/AAAA4QAAAKQAAACkAAAA4QAA
        AP8AAADsAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADuAAAA/wAAAP4AAAD/AAAA/wAA
        AP4AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA7gAAAP8AAAD+AAAA/wAA
        AP8AAAD+AAAA/wAAAO4AAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAO0AAAD/AAAA9wAA
        AOkAAADpAAAA9wAAAP8AAADtAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADtAAAA/wAA
        APcAAADpAAAA6QAAAPcAAAD/AAAA7QAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAA
        AP8AAACvAAAACgAAAAoAAACvAAAA/wAAAOsAAAAVAAAAAAAAAAUAAAAEAAAABAAAAAUAAAAAAAAAFQAA
        AOsAAAD/AAAArwAAAAoAAAAKAAAArwAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAARAAAA6gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAOsAAAD/AAAAxQAAAE8AAABPAAAAxgAAAP8AAADxAAAAYQAAAFMAAABWAAAAVgAA
        AFYAAABWAAAAUwAAAGEAAADxAAAA/wAAAMYAAABPAAAATwAAAMUAAAD/AAAA6wAAABEAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAARAAAA7gAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADuAAAAEQAA
        AAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADuAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AO4AAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOsAAAD/AAAAxQAAAE8AAABPAAAAxgAA
        AP8AAADxAAAAYQAAAFMAAABWAAAAVgAAAFYAAABWAAAAUwAAAGEAAADxAAAA/wAAAMYAAABPAAAATwAA
        AMUAAAD/AAAA6wAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACoAAAAAAAA
        AAAAAACoAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAA
        AAAAAAAAAAAAqAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADqAAAA/wAA
        AK8AAAAKAAAACgAAAK8AAAD/AAAA6wAAABUAAAAAAAAABQAAAAQAAAAEAAAABQAAAAAAAAAVAAAA6wAA
        AP8AAACvAAAACgAAAAoAAACvAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAA
        AO0AAAD/AAAA9wAAAOkAAADpAAAA9wAAAP8AAADtAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADtAAAA/wAAAPcAAADpAAAA6QAAAPcAAAD/AAAA7QAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAARAAAA7gAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAAAO4AAAARAAAAAAAAAAEAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAO4AAAD/AAAA/gAAAP8AAAD/AAAA/gAAAP8AAADuAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAABAAAAAAAAABEAAADsAAAA/wAAAOEAAACkAAAApAAAAOEAAAD/AAAA7AAAABEAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAARAAAA7AAAAP8AAADhAAAApAAAAKQAAADhAAAA/wAAAOwAAAARAAAAAAAA
        AAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAADqAAAAFAAA
        AAAAAAAEAAAAAwAAAAMAAAAEAAAAAAAAABQAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAA
        ABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAA
        AOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAA
        AP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADrAAAA/wAAAOAAAACkAAAApAAA
        AOEAAAD/AAAA9wAAAK4AAACnAAAAqQAAAKgAAACoAAAAqQAAAKcAAACuAAAA9wAAAP8AAADhAAAApAAA
        AKQAAADgAAAA/wAAAOsAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAO4AAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA3QAA
        APIAAADrAAAA6gAAAOoAAADsAAAA7gAAAO0AAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAA
        AO0AAADuAAAA7AAAAOoAAADqAAAA6wAAAPIAAADdAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAQAAAAEgAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEgAAABAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////6AAAAX/////oAAABaAAAAWgAAAFoAAABaGFoYWhhCGFoAQgBaAF
        oAWgBaAFoAQgBaGFoYWgAAAFoAAABaAAAAWgAAAFoYWhhaAEIAWgBaAFoAWgBaAEIAWhhCGFoYWhhaAA
        AAWgAAAFoAAABaAAAAX/////oAAABf////8=
</value>
  </data>
</root>