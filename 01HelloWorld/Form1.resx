<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPD3AQDw9wEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAADYAAAD3AAAA+wAA
        APoAAAD7AAAA+wAAAPoAAAD8AAAA9gAAADYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAfAAA
        AP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAfAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACrAAAA/wAAAIsAAAAdAAAAMAAAADAAAAAdAAAAiwAAAP8AAACrAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAABAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAADAAAABAAA
        AAMAAAABAAAABAAAANgAAAD/AAAARwAAAAAAAAADAAAAAwAAAAAAAABIAAAA/wAAANgAAAAEAAAAAQAA
        AAMAAAAEAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABQAAABKAAAAFQAA
        AAAAAAABAAAAAgAAAAAAAABDAAAA/AAAAPYAAAAgAAAAAAAAAAQAAAAEAAAAAAAAACAAAAD2AAAA/AAA
        AEMAAAAAAAAAAgAAAAEAAAAAAAAAFQAAAEoAAAAUAAAAAAAAAAEAAAAAAAAAAAAAAAIAAAAAAAAArQAA
        AP8AAADsAAAArAAAAFYAAAAjAAAAnAAAAPsAAAD/AAAA0gAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAQAA
        ANMAAAD/AAAA+wAAAJwAAAAjAAAAVgAAAKwAAADsAAAA/wAAAK0AAAAAAAAAAgAAAAAAAAADAAAAAAAA
        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
        IAIgBkAEIkJCREwCQDKgIAQF/yAE//8gBP8=
</value>
  </data>
</root>