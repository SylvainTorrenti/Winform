<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB0AAAEAIAAcDwAAFgAAACgAAAAgAAAAOgAAAAEAIAAAAAAAgA4AAPksAAD5LAAAAAAAAAAA
        AACXl5UAXVxdBLe2tBl0dHQAdnV2ANPS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAC8uMgCUk5MAh4aGAGhn
        aQJVVFYBZ2ZnAF1cXgAhHygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMTDwQCko6JkysnHiMbFwwDIx8UE09HPAAAAAAAAAAAAAAAAAAAAAAC3trUA3d3bAODf
        3QC5uLcC////AAAAAAGDgoJHtbSzP6qpqACioaEBycjGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AE5NT7XKyceOxb+3ALOzsgP/++QAIEyDAAAAAAAAAAAAAAAAAAAA
        AAABAQEAWVhaAV5dXwBPT1ElKSgsp7W0s9Pf3ts64+LgAMvKyALQz80AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwbnAXUVBTxXl4eLf///8N////AJWktgEgSoIAIEuDACFN
        gwAAAAAAtbW0AKuqqgKnpqUArayrSrW0s+JnZWXezs3MV8rJxwDHxsQD0tnfAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHJydCvR0M3+lZmfuilPhTg6YJAAQWWRBCBL
        gwIgS4MAIEuDACBMgwDIx8YA1NPRBNfW1ADV1NJ60M/N7YOIkYHo7vQU////AIWZsQEAAE0AJE6FACBO
        hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApqyyE9/a1JOgscCQFUmB7iVO
        hXhClKsAJ2aSASBLgwQgS4MCIEuDACBLgwDPzswA////AP///wF4jqlGGUeC7h5JgWUUQnwAHEmCBSJT
        hwEiU4cAIlSIACNViQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyZ5IAATZ4AQE+
        fwAlXIyxI1WI/yBMhLceQ38aHkN/ACBKggMgS4MDH0qCAFJxmQAWQ30Ai5yyAhlIhQAhS4O0IEuD/yBL
        g3QfS4MAIlGGAyNXiQMkWYoAJFmLACNYigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOy
        sQGerboGADN0ACJYiiEkW4zsI1iK/yFPheMfSIJuIEuDHR9HfAAfQV8EISgAAWpuTwBIaZMCAB9qAB9K
        gyMgS4PtIEuD/yBMhKIpbZUJK3OYACRZigIkW4sAJFqLACBRhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAD98AANDfgAmW4wEJFqLACRZi2YkW4v/JFqL+yJSh/8gS4PSIEuCLR9GegAdNTYDHSkEAh0v
        HAAgR3QEIU+SACBKgFwgS4P3IEuD/yJTh9EmYI4nJ2SQACRbjAIjVogAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAjWosAJFqLACRaiwAkWYsBJVyMAiRai3gkWovLJVyM7iJTh/8gS4X/IUl2dxgA
        AAZb//8AHSgBBB0vHAIryv8AMv//ACBLg4QgS4LpIEuD/yNXifwkW4xCJVyMACRZiwMfUYUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWosAJlqLACVaiwAkWosCJFuLAiVbigAkWYhFJFuN/yBS
        kegcLiDtHScAyx4sDBoeKQAAGxwAABwmAEcdKgiwIEqB3R9Lh/8hTYP/I1eK3SRcjBslXo0AJFmLASBR
        hQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWosAJFqLACRaiwAkWosEKlRkAipd
        eAAlWoirMUwu5yMsAPYZJQH/HSgA6B8qADgcJwCGGycB/xokAP8cKhPII1B94iRZi+slXYonJV6OACRc
        jAIgUIYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWosAJFqLACNa
        jAA2RxwCRTUAADdCEhg5RQHROEUB/ycyAPobJgD/GyYA9xwoAMcgKwDjJDED/zE9AP83Rwy/IFyZHR9h
        pAAoV3ECHkR/ACBLgwMgS4MBIEuDAB9LgQAgSoMAIEyEACFPhQAgS4MAIEuDAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJFqLACRaiwAvTT0BH4D/ASo4BgQ5RgB7OUcA/ys4APwgLAD+GiUB+SEuBNYzPADbO0AAkDRF
        DBQ/KwAAKlFcAyRdjwAgTIMBI1WIACNYiQAmY5ABIlKHBCNWiQQmYI4DJFqLAh9IgQEgTYQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAkWosALkk4AC5JNwAxSCcDTDwAADhEABE3RADtN0QA/zhFAfojLwP/FxkA6ihU
        XIg6p/9HT5//ADJyvAQuer4BIU+IACBMhBAfSIFGHT99FzCDpwAteJ8AFilvACRNhAAkTYQAJE2EACRN
        hAAAAAAAAAAAAAAAAAAAAAAAAAAAACBLhQAgS4MAIEuDAChJWgE3RQECN0UAADhFAZo4RgD/N0MA/zA8
        BMQ5kbydQK786TiR3P83jtqiNo/nAyZdmAUeRn0AIEqDdyFQhv8iUYbxIVCG0CFPhZgiU4eGI1iKsCNV
        iLYgSoN/IE2ECgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBLgwEgS4MAIEuDDCBLg1EgS4MdAAAAACIu
        ACFWZjZmV7fw0zyz//1AqvT+PaTw+jmW4v83j9upJlmcAB9Igg4gTITiJFqL/yRbjP0kWov1I1iK1SRZ
        ivMkW4z/I1aJ/yBKg8cgTIQlAAAAAAAAAAAAAAAAAAAAAAAAAAAgSoUAIEuDAiBLgwAgS4MqIEuD1SBL
        g9UhTINnF0eHDwBBpgCT0fq5TrT4/zyu+vtBr/r/Pqjz+jiR3v87mOh3HEB2TSFQhv8kW4v/JFiKXSBN
        hQIkWYoAJFmLViRai7ciVIhUIEqCQCJRhwMAAAAAAAAAAAAAAAAAAAAAAAAAACBLhgAgS4MBIEuDACBL
        gyAgS4OQIEuD+iBLg90tV4cWy+7/ANHp/CR/yfzxPK36/0Gv+v5Ar/r+Opjl/zSG0M0fR3+zI1WI/yRb
        jP8kWYpdJFqLACRZigYkW4sAJFmKEyRZigQkWYoAJFmKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBL
        hAAgS4MAIE2EAiFOhQAgTIN4IEyD/yBKg0YAADoA0v//AKDW/IZUt/r/Pa76+0Ct+P9Arfn5KGShux5F
        fOAjVYn/JFuM+iNYijIkWYsAJFmKAiRaiwMlXY0CIlSIAyBKgwIjVokAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgS4YAIEuDAB9LggAkW4sAGzp6AhkzdgAiUYbIIEuD+yRQhzJ5mbkA4fb5HW3D/O9NtPr/RLD5/0O2
        //EoYJq3HkZ9/iNVif8kW4voIlSIDiNYigAkWYoBJFmKACRYigEjWIoAI1iKACNYigAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAgS4MAH0uEACFPhQAjVYgEJFiKACNYioMgTYT/IEuDxSJPh38bQ3rFcrfox27F
        //9aufn8PLD9/zGV3sMfSoDpJFqM/yRai+MjV4oSJFiKACRZigEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI1eJACRaiwMlXo0AJV6NQSJSh/8fSYLtIkyE9BdB
        ev9ZirrOnNv//WC7+f1Jtfz/ec//8FiPv5cYTX9iL2iXFyRbiwAkW4sBIViHAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjVokAJFiKASZgjwAmYY8LI1iK4SJR
        hv8jUof9HU2C/z1wodSp3//0h838/4fC7tpCapraIEqCvCFGgxQkVYs5KWCVAyhekwAlV44AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjWIoAJ2SQACdk
        kAAkWosmJV2NPiVejTkjXYsrP3qmF5PM9jDj//8sIkuDoBhEff8gSoLMIUyE/yRViuQeUn8KIFSCACJU
        hgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRZ
        iwAkWosAJFmLACRaiwEkWosATYGsALHe/QCz3/0AKlaMAiRPhwAkUIcyIk6FxyJRhuYiUYf/IlSG+iBR
        gi4gUYEAIFKDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAI1eKACRbjAAkW4sAJFmLAiRZigMkWosDIVaIAjtxoAFzp9MDAAAAACNNhhUgTIPvIlGH/yJT
        hv8eT370JFSLGSNUigAiU4cBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEuDACBLgwEgTYQAIU6FBiBL
        g9sgSoL/I1SJ/yVXjOwkVYogJFaLACRWiwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEyEACFM
        hAEgS4MAIEuDNiFPhlIkVYo/I1WJFyZbjgAlWI0AI1SJAAAAAAAAAAAAAAAAAAAAAAAAAAAAk/S//5Po
        J/+R5Cf/Cshf/wlIV/8ESEv/ISIk/yBKCv9QJQT/gAEC//IGAv/RAAX/9QAIIPoAFID9QCRM/SAEAP0Q
        CAD9BAAg/QQAUvxGAED+IgBS/SAAX/8gAL//oABf/5AAX/+lIF//kCBf//+gX///kJ8=
</value>
  </data>
</root>